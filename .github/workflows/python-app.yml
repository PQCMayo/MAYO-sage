# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "MAYO1.1" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        sudo apt-get update
        apt-cache policy sagemath
        python -m pip install --upgrade pip
        curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" 
        bash Miniforge3-$(uname)-$(uname -m).sh -b
        source ~/miniforge3/etc/profile.d/conda.sh
        conda create -n sage sage python=3.12 -c conda-forge -y
        conda run -n sage pip install flake8 pytest
        if [ -f requirements.txt ]; then conda run -n sage pip install -r requirements.txt; fi
        conda install -y -n sage make -c conda-forge
        conda run -n sage sage -pip install pycryptodomex
    - name: Check installed versions
      run: |
        # Print Python version
        source $HOME/miniforge3/etc/profile.d/conda.sh
        conda run -n sage python --version
        conda run -n sage pip --version
        conda run -n sage sage --version
    - name: Test application
      run: |
        conda activate sage
        source $HOME/miniforge3/etc/profile.d/conda.sh
        make test-conda
